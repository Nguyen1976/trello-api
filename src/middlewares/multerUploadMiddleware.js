import { StatusCodes } from 'http-status-codes'
import multer from 'multer'
import nulter from 'multer'
import ApiError from '~/utils/ApiError'
import {
  ALLOW_COMMON_FILE_TYPES,
  LIMIT_COMMON_FILE_SIZE
} from '~/utils/validators'

//https://www.npmjs.com/package/multer
//docs c√≥ h·ªó tr·ª£ ti·∫øng vi·ªát

//Funtion ki·ªÉm tra lo·∫°i file n√†o ƒë∆∞·ª£c ch·∫•p nh·∫≠n
const customFileFilter = (req, file, callback) => {
console.log("üöÄ ~ multerUploadMiddleware.js:15 ~ file:", file)

  //ƒê√≥i v·ªõi multer ki·ªÉm tra ki·ªÉu file th√¨ s·ª≠ d·ª•ng mimetype
  if (!ALLOW_COMMON_FILE_TYPES.includes(file.mimetype)) {
    const errorMessage = 'File type is invalid. Only accept jpg, jpeg and png'
    return callback(
      new ApiError(StatusCodes.UNPROCESSABLE_ENTITY, errorMessage),
      null
    )
  }

  return callback(null, true)
}

//Kh·ªüi t·∫°o func upload ƒë∆∞·ª£c b·ªçc b·ªüi th·∫±ng multer
const upload = multer({
  limits: { fileSize: LIMIT_COMMON_FILE_SIZE },
  fileFilter: customFileFilter
})

export const multerUploadMiddleware = {
  upload
}
